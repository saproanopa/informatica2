/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juego6;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.Timer;

/**
 *
 * @author User
 */
public class Pong extends javax.swing.JFrame implements KeyListener
{
    int pelotax=335, pelotay=220,signox=1, signoy=1;
    int rectangulo1x=15,rectangulo1y=50,rectangulo2x=695,rectangulo2y=50,x,puntaje1=0,puntaje2=0;
  
    

    /**
     * Creates new form Pong
     */
    public Pong() {
        initComponents();
        addKeyListener(this);
        this.getContentPane().setBackground(Color.black);
        
        
    }
    public void paint (Graphics grafico)
        {
            super.paint(grafico);
            
            
            
            grafico.setColor(Color.green);
            grafico.drawOval(350, 235, 30, 30);
            grafico.drawLine(365, 0, 365, 450);
             grafico.drawLine(1, 1, 0, 450);
              grafico.drawLine(0, 450, 800, 450);
             
            
            grafico.fillRect(rectangulo1x, rectangulo1y, 20, 100);
            grafico.fillRect(rectangulo2x, rectangulo2y, 20, 100);        
           
            grafico.setColor(Color.green);
            grafico.fillOval(pelotax,pelotay, 50, 50);
            
            
            grafico.drawString("PLAYER 1: "+puntaje1, 120, 90);
            grafico.drawString("PLAYER 2: "+puntaje2, 450, 90);
            grafico.drawString("total games played: "+(puntaje2+puntaje2), 310,460);
            
           
            
        }
    Timer temporizador = new Timer(100, new ActionListener()
    {
        public void actionPerformed(ActionEvent e)
        {
            if (pelotax<15 || pelotax>660)
            {
                signox*=-1;
                if (pelotax<15)
                {
                    puntaje2++;
                }
                if (pelotax>660)
                {
                    puntaje1++;
                }
                pelotax=358;
                pelotay=225;
            }
            pelotax=pelotax+signox*5;
            if (pelotax<30 && pelotay>rectangulo1y+10 && pelotay<rectangulo1y+110)
                {
                    signox*=-1;
                    pelotax=pelotax+signox*5;
                }
            System.out.println("pelotax = "+pelotax);
            if (pelotay<50 || pelotay>400)
            {
                signoy*=-1;
            }
            pelotay=pelotay+signoy*7;
            if (pelotax>650 && pelotay>rectangulo2y+10 && pelotay<rectangulo2y+110)
            {
                signox*=-1;
                pelotax=pelotax+signox*5;                
            }
            
            
            repaint();
            
            
        }
    });
    public void keyTyped(KeyEvent e) //se presiona una tecla de funcion
    {
    }
    public void keyReleased(KeyEvent e)//se deja de presionar 
    {
        
    }
    public void keyPressed(KeyEvent e) //se presiona una tecla
    {
       if (e.getKeyCode()==83){
           rectangulo1y+=10;
           repaint();
           if (rectangulo1y>=350)
           {
               rectangulo1y=350;
               repaint();
           }
       }
       else if (e.getKeyCode()==87)
       {
           rectangulo1y-=10;
           repaint();
           if(rectangulo1y<=50)
           {
               rectangulo1y=50;
               repaint();
           }
       }
       if (e.getKeyCode()==40){
           rectangulo2y+=10;
           repaint();
           if (rectangulo2y>=350)
           {
               rectangulo2y=350;
               repaint();
           }
       }
       else if (e.getKeyCode()==38)
       {
           rectangulo2y-=10;
           repaint();
           if(rectangulo2y<=50)
           {
               rectangulo2y=50;
               repaint();
           }
       } 
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 715, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       temporizador.start();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
